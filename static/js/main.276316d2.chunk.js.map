{"version":3,"sources":["TaskContext.js","components/AddTask.jsx","components/Task.jsx","components/TaskList.jsx","components/DoneTask.jsx","components/DoneTasks.jsx","App.js","index.js"],"names":["TaskContext","createContext","AddTask","_useState","useState","_useState2","Object","slicedToArray","context","setContext","_useState3","_useState4","date","setDate","_useState5","_useState6","important","setImportant","add","useContext","handleAdd","listOfTasks","tableOfTasks","editedTask","currentDate","Date","toISOString","slice","useEffect","react_default","a","createElement","className","htmlFor","type","id","value","onChange","e","target","min","checked","onClick","Task","props","done","edit","TaskList","handleDone","handleEdit","tasks","toConsumableArray","sort","b","map","task","components_Task","key","DoneTask","doneDate","Fragment","delete","DoneTasks","listOfDoneTasks","tableOfDoneTasks","handleDelete","components_DoneTask","App","setTableOfTasks","setTableOfDoneDasks","numberOfDoneTasks","setNumberOfDoneTasks","_useState7","_useState8","setEditedTask","Provider","alert","newId","i","length","concat","taskID","doneTask","filter","components_AddTask","components_TaskList","components_DoneTasks","ReactDOM","render","src_App","document","getElementById"],"mappings":"gTAEaA,SAAcC,wBAAc,OCuD1BC,EApDC,WAAM,IAAAC,EACYC,mBAAS,IADrBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACXK,EADWH,EAAA,GACFI,EADEJ,EAAA,GAAAK,EAEMN,mBAAS,IAFfO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEXE,EAFWD,EAAA,GAELE,EAFKF,EAAA,GAAAG,EAGgBV,oBAAS,GAHzBW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGXE,EAHWD,EAAA,GAGAE,EAHAF,EAAA,GAKZG,EAAMC,qBAAWnB,GAAaoB,UAC9BC,EAAcF,qBAAWnB,GAAasB,aACtCC,EAAaJ,qBAAWnB,GAAauB,WAcrCC,GAAc,IAAIC,MAAOC,cAAcC,MAAM,EAAG,IAgBtD,OAdAC,oBAAU,WACNnB,EAAW,IACXI,EAAQ,IACRI,GAAa,IACd,CAACI,IAEJO,oBAAU,WACHL,EAAW,KACVd,EAAWc,EAAW,GAAGf,SACzBK,EAAQU,EAAW,GAAGX,MACtBK,EAAaM,EAAW,GAAGP,aAEhC,CAACO,IAGAM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,OAAf,eACAJ,EAAAC,EAAAC,cAAA,SAAOG,KAAK,OAAOC,GAAG,MAAMC,MAAO5B,EAAS6B,SA/B5B,SAAAC,GACpB7B,EAAW6B,EAAEC,OAAOH,UA+BhBP,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,QAAf,UACAJ,EAAAC,EAAAC,cAAA,SAAOG,KAAK,OAAOC,GAAG,OAAOC,MAAOxB,EAAMyB,SA7B1B,SAAAC,GACpBzB,EAAQyB,EAAEC,OAAOH,QA4BwDI,IAAKhB,IAC1EK,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,YAAf,cACAJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,SAAOG,KAAK,WAAWO,UAASzB,EAA0BoB,MAAOpB,EAAWqB,SA5BjE,WACnBpB,GAAcD,OA6BVa,EAAAC,EAAAC,cAAA,UAAQW,QAAS,kBAAMxB,EAAIV,EAASI,EAAMI,KAA1C,cCpCG2B,SAZF,SAAAC,GACT,OACIf,EAAAC,EAAAC,cAAA,MACIC,UAAWY,EAAM5B,UAAY,YAAc,IAE1C4B,EAAMpC,QAHX,MAGuBoC,EAAMhC,KACzBiB,EAAAC,EAAAC,cAAA,UAAQW,QAAS,kBAAME,EAAMC,KAAKD,EAAMT,MAAxC,aACAN,EAAAC,EAAAC,cAAA,UAAQW,QAAS,kBAAME,EAAME,KAAKF,EAAMT,MAAxC,WCsBGY,SA1BE,WAEb,IAAM1B,EAAcF,qBAAWnB,GAAasB,aACtC0B,EAAa7B,qBAAWnB,GAAagD,WACrCC,EAAa9B,qBAAWnB,GAAaiD,WAEvCC,EAAQ5C,OAAA6C,EAAA,EAAA7C,CAAIe,GAAa+B,KAAK,SAACtB,EAAGuB,GAAJ,OAAWvB,EAAElB,KAAOyC,EAAEzC,KAAQ,EAAMyC,EAAEzC,KAAOkB,EAAElB,MAAS,EAAI,IAG9F,OAFAsC,EAAQ5C,OAAA6C,EAAA,EAAA7C,CAAI4C,GAAOE,KAAK,SAACtB,EAAGuB,GAAJ,OAAWvB,EAAEd,UAAYqC,EAAErC,UAAa,EAAMqC,EAAErC,UAAYc,EAAEd,WAAc,EAAI,IAGpGa,EAAAC,EAAAC,cAAA,UACKmB,EAAMI,IAAI,SAAAC,GAAI,OACX1B,EAAAC,EAAAC,cAACyB,EAAD,CACIC,IAAKF,EAAKpB,GACVA,GAAIoB,EAAKpB,GACT3B,QAAS+C,EAAK/C,QACdI,KAAM2C,EAAK3C,KACXI,UAAWuC,EAAKvC,UAChB6B,KAAMG,EACNF,KAAMG,SCTXS,SAfE,SAAAd,GAEb,IAAMe,GAAW,IAAIlC,MAAOC,cAAcC,MAAM,EAAG,IAEnD,OACIE,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8B,SAAA,KACI/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBY,EAAMpC,SACrCqB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB2B,GAChC9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,UAAQW,QAAS,kBAAME,EAAMiB,OAAOjB,EAAMT,MAA1C,SCoBD2B,SAvBG,WAEd,IAAMC,EAAkB5C,qBAAWnB,GAAagE,iBAC1CC,EAAe9C,qBAAWnB,GAAaiE,aAE7C,OACIpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,QACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,eACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,UACC+B,EAAgBT,IAAI,SAAAC,GAAI,OACrB1B,EAAAC,EAAAC,cAACmC,EAAD,CACIT,IAAKF,EAAKpB,GACVA,GAAIoB,EAAKpB,GACT3B,QAAS+C,EAAK/C,QACdqD,OAAQI,SCkEbE,EAjFH,WAAM,IAAAhE,EACwBC,mBAAS,IADjCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACTmB,EADSjB,EAAA,GACK+D,EADL/D,EAAA,GAAAK,EAGgCN,mBAAS,IAHzCO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAGTsD,EAHSrD,EAAA,GAGS0D,EAHT1D,EAAA,GAAAG,EAKkCV,mBAAS,GAL3CW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAKTwD,EALSvD,EAAA,GAKUwD,EALVxD,EAAA,GAAAyD,EAOoBpE,mBAAS,IAP7BqE,EAAAnE,OAAAC,EAAA,EAAAD,CAAAkE,EAAA,GAOTjD,EAPSkD,EAAA,GAOGC,EAPHD,EAAA,GA4DhB,OACE5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAC/B,EAAY2E,SAAb,CAAsBvC,MAAO,CACzBd,eACA0C,mBACAzC,aACAH,UAtCQ,SAACZ,EAASI,EAAMI,GAChC,GAAe,KAAZR,GAA2B,KAATI,EAEnB,OADAgE,MAAM,0CACC,KAET,GAAe,KAAZpE,EAED,OADAoE,MAAM,0BACC,KAET,GAAY,KAAThE,EAED,OADAgE,MAAM,wBACC,KAIT,IADA,IAAIC,EAAQ,EACJC,EAAI,EAAGA,EAAIxD,EAAayD,OAAQD,IACnCxD,EAAawD,GAAG3C,IAAM0C,IAAOA,EAAQvD,EAAawD,GAAG3C,GAAG,GAE7DiC,EAAe,GAAAY,OAAA1E,OAAA6C,EAAA,EAAA7C,CAAKgB,GAAL,CAAmB,CAChCa,GAAI0C,EACJrE,UACAI,OACAI,iBAiBMgC,WA3DS,SAAAiC,GAEjB,IADA,IAAIJ,EAAQ,EACJC,EAAI,EAAGA,EAAId,EAAiBe,OAAQD,IACvCd,EAAiBc,GAAG3C,IAAM0C,IAAOA,EAAQb,EAAiBc,GAAG3C,GAAG,GAGrE,IAAM+C,EAAW5D,EAAa6D,OAAO,SAAA5B,GAAI,OAAIA,EAAKpB,KAAO8C,IAEzDZ,EAAmB,GAAAW,OAAA1E,OAAA6C,EAAA,EAAA7C,CAAK0D,GAAL,CAAuB,CACxC7B,GAAI0C,EACJrE,QAAS0E,EAAS,GAAG1E,YAEvB4D,EAAgB9C,EAAa6D,OAAO,SAAA5B,GAAI,OAAIA,EAAKpB,KAAO8C,KACxDV,EAAqBD,EAAoB,IA+CjCL,aA5CW,SAAAgB,GACnBZ,EAAoBL,EAAiBmB,OAAO,SAAA5B,GAAI,OAAIA,EAAKpB,KAAO8C,MA4CxDhC,WAfS,SAAAgC,GACjBP,EAAcpD,EAAa6D,OAAO,SAAA5B,GAAI,OAAIA,EAAKpB,KAAO8C,KACtDb,EAAgB9C,EAAa6D,OAAO,SAAA5B,GAAI,OAAIA,EAAKpB,KAAO8C,QAelDpD,EAAAC,EAAAC,cAACqD,EAAD,MACyB,IAAxB9D,EAAayD,QAAgBlD,EAAAC,EAAAC,cAACsD,EAAD,MACD,IAA5BrB,EAAiBe,QAAgBlD,EAAAC,EAAAC,cAACuD,EAAD,OAEpCzD,EAAAC,EAAAC,cAAA,wCAAgCuC,KChFxCiB,IAASC,OAAO3D,EAAAC,EAAAC,cAAC0D,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.276316d2.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const TaskContext = createContext(null);","import React, { useContext, useEffect, useState } from 'react';\r\n\r\nimport '../styles/AddTask.css';\r\nimport { TaskContext } from '../TaskContext';\r\n\r\nconst AddTask = () => {\r\n    const [context, setContext] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [important, setImportant] = useState(false);\r\n\r\n    const add = useContext(TaskContext).handleAdd;\r\n    const listOfTasks = useContext(TaskContext).tableOfTasks;\r\n    const editedTask = useContext(TaskContext).editedTask;\r\n\r\n    const handleTextInput = e => {\r\n        setContext(e.target.value);\r\n    }\r\n\r\n    const handleDateInput = e => {\r\n        setDate(e.target.value);\r\n    }\r\n\r\n    const handleCheckbox = () => {\r\n        setImportant(!important);\r\n    }\r\n\r\n    const currentDate = new Date().toISOString().slice(0, 10);\r\n    \r\n    useEffect(() => {\r\n        setContext('');\r\n        setDate('');\r\n        setImportant(false);\r\n    }, [listOfTasks]);\r\n\r\n    useEffect(() => {\r\n        if(editedTask[0]) {\r\n            setContext(editedTask[0].context);\r\n            setDate(editedTask[0].date);\r\n            setImportant(editedTask[0].important);\r\n        }      \r\n    }, [editedTask])\r\n\r\n    return ( \r\n        <div className=\"add-task\">\r\n            <label htmlFor=\"add\">Task Name: </label>\r\n            <input type=\"text\" id=\"add\" value={context} onChange={handleTextInput}/>\r\n            <label htmlFor=\"date\">Date: </label>\r\n            <input type=\"date\" id=\"date\" value={date} onChange={handleDateInput} min={currentDate}/>\r\n            <label htmlFor=\"checkbox\">Important:</label>\r\n            <div className=\"checkbox\">\r\n                <input type=\"checkbox\" checked={important ? true : false} value={important} onChange={handleCheckbox}/>\r\n            </div>\r\n            <button onClick={() => add(context, date, important)}>Add Task</button>\r\n        </div>\r\n     );\r\n}\r\n\r\nexport default AddTask;","import React from 'react';\r\n\r\nimport '../styles/Task.css';\r\n\r\nconst Task = props => {\r\n    return (\r\n        <li \r\n            className={props.important ? 'important' : ''}\r\n        >\r\n            {props.context} / {props.date} \r\n            <button onClick={() => props.done(props.id)}>Done Task</button>\r\n            <button onClick={() => props.edit(props.id)}>Edit</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Task;","import React, { useContext } from 'react';\r\n\r\nimport Task from './Task';\r\nimport { TaskContext } from '../TaskContext';\r\n\r\nimport '../styles/TaskList.css';\r\n\r\nconst TaskList = () => {\r\n\r\n    const listOfTasks = useContext(TaskContext).tableOfTasks;\r\n    const handleDone = useContext(TaskContext).handleDone;\r\n    const handleEdit = useContext(TaskContext).handleEdit;\r\n\r\n    let tasks = [...listOfTasks].sort((a, b) => (a.date > b.date) ? 1 : ((b.date > a.date) ? -1 : 0))\r\n    tasks = [...tasks].sort((a, b) => (a.important < b.important) ? 1 : ((b.important < a.important) ? -1 : 0))\r\n\r\n    return ( \r\n        <ul>\r\n            {tasks.map(task => \r\n                <Task \r\n                    key={task.id}\r\n                    id={task.id}\r\n                    context={task.context}\r\n                    date={task.date} \r\n                    important={task.important}\r\n                    done={handleDone}\r\n                    edit={handleEdit}\r\n                />\r\n            )}\r\n        </ul>\r\n     );\r\n}\r\n \r\nexport default TaskList;","import React from 'react';\r\n\r\nconst DoneTask = props => {\r\n\r\n    const doneDate = new Date().toISOString().slice(0, 10);\r\n\r\n    return ( \r\n        <>\r\n            <div className=\"first-column\">{props.context}</div>\r\n            <div className=\"second-column\">{doneDate}</div>\r\n            <div className=\"third-column\">\r\n                <button onClick={() => props.delete(props.id)}>X</button>\r\n            </div>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default DoneTask;","import React, { useContext } from 'react';\r\n\r\nimport DoneTask from './DoneTask';\r\nimport { TaskContext } from '../TaskContext';\r\n\r\nimport '../styles/DoneTasks.css';\r\n\r\n\r\nconst DoneTasks = () => {\r\n\r\n    const listOfDoneTasks = useContext(TaskContext).tableOfDoneTasks;\r\n    const handleDelete = useContext(TaskContext).handleDelete;\r\n\r\n    return ( \r\n        <div className=\"done-tasks\">\r\n            <h3>Finished Tasks</h3>\r\n            <div className=\"first-column\">Task</div>\r\n            <div className=\"second-column\">Finish Date</div>\r\n            <div className=\"third-column\">Delete</div>\r\n            {listOfDoneTasks.map(task => \r\n                <DoneTask \r\n                    key={task.id}\r\n                    id={task.id}\r\n                    context={task.context}\r\n                    delete={handleDelete} \r\n                />\r\n            )}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default DoneTasks;","import React, { useState } from 'react';\n\nimport AddTask from './components/AddTask';\nimport TaskList from './components/TaskList';\nimport { TaskContext } from './TaskContext';\n\nimport './styles/App.css';\nimport DoneTasks from './components/DoneTasks';\n\nconst App = () => {\n  const [tableOfTasks, setTableOfTasks] = useState([]);\n\n  const [tableOfDoneTasks, setTableOfDoneDasks] = useState([]);\n\n  const [numberOfDoneTasks, setNumberOfDoneTasks] = useState(0);\n\n  const [editedTask, setEditedTask] = useState([]);\n\n  const handleDone = taskID => {\n    let newId = 0;\n    for(let i = 0; i < tableOfDoneTasks.length; i++) {\n      if(tableOfDoneTasks[i].id >= newId) newId = tableOfDoneTasks[i].id+1;\n    }\n\n    const doneTask = tableOfTasks.filter(task => task.id === taskID);\n\n    setTableOfDoneDasks([...tableOfDoneTasks, {\n      id: newId, \n      context: doneTask[0].context,\n    }]);\n    setTableOfTasks(tableOfTasks.filter(task => task.id !== taskID));\n    setNumberOfDoneTasks(numberOfDoneTasks + 1);\n  }\n\n  const handleDelete = taskID => {\n    setTableOfDoneDasks(tableOfDoneTasks.filter(task => task.id !== taskID));\n  }\n\n  const handleAdd = (context, date, important) => {\n    if(context === '' && date === '') {\n      alert('You must add Task Name and select Date');\n      return null;\n    }\n    if(context === '') {\n      alert('You must add Task Name');\n      return null;\n    }\n    if(date === '') {\n      alert('You must select Date');\n      return null;\n    }\n\n    let newId = 0;\n    for(let i = 0; i < tableOfTasks.length; i++) {\n      if(tableOfTasks[i].id >= newId) newId = tableOfTasks[i].id+1;\n    }\n    setTableOfTasks([...tableOfTasks, {\n      id: newId,\n      context, \n      date,\n      important,\n    }]);\n  }\n\n  const handleEdit = taskID => {\n    setEditedTask(tableOfTasks.filter(task => task.id === taskID));\n    setTableOfTasks(tableOfTasks.filter(task => task.id !== taskID));\n  }\n\n  return ( \n    <div className='to-do-app'>\n        <h1>Todo app</h1>\n        <TaskContext.Provider value={{\n            tableOfTasks, \n            tableOfDoneTasks, \n            editedTask, \n            handleAdd, \n            handleDone, \n            handleDelete, \n            handleEdit,\n          }}>\n          <AddTask/>\n          {tableOfTasks.length !== 0 && <TaskList/>}\n          {tableOfDoneTasks.length !== 0 && <DoneTasks/>}\n        </TaskContext.Provider>\n        <h3>Number of completed tasks: {numberOfDoneTasks}</h3> \n      </div>\n   );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}